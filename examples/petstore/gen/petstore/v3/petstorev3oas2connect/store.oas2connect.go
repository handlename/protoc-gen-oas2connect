// Code generated by protoc-gen-oas2connect. DO NOT EDIT.

package petstorev3oas2connect

import (
	"bytes"
	"encoding/json"
	"log"
	"net/http"

	connect "petstore/gen/petstore/v3/petstorev3connect"
	pb "petstore/gen/petstore/v3"
)

func RegisterStoreServiceEndpoints(mux *http.ServeMux, svc connect.StoreServiceHandler) {
	path, handler := connect.NewStoreServiceHandler(svc)
	mux.HandleFunc(NewStoreServiceAddStoreOrderHandler(path, handler))
	log.Printf("registered 1 endpoints of StoreService")
}
func NewStoreServiceAddStoreOrderHandler(protoPath string, protoHandler http.Handler) (string, func(http.ResponseWriter, *http.Request)) {
	return "POST /store/order", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		pbr := pb.AddStoreOrderRequest{}
		dec := json.NewDecoder(r.Body)
		defer r.Body.Close()
		if err := dec.Decode(&pbr); err != nil {
			log.Printf("failed to decode request body: %v", err)
			http.Error(w, "invalid request body", http.StatusBadRequest)
			return
		}

		var cb bytes.Buffer
		json.NewEncoder(&cb).Encode(&pbr)

		cr, err := http.NewRequest(http.MethodPost, protoPath+"AddStoreOrder", &cb)
		if err != nil {
			log.Printf("error on pass request to connect: %v", err)
			http.Error(w, "Internal Server Error", http.StatusInternalServerError)
			return
		}
		cr.Header.Set("content-type", "application/json")

		protoHandler.ServeHTTP(w, cr)
	})
}
