openapi: 3.1.0
info:
  title: ""
  version: ""
paths:
  /pet:
    put:
      operationId: updatePet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePetRequest'
        required: true
      responses:
        "200":
          description: petstore.v3.PetService.UpdatePet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePetResponse'
    post:
      operationId: addPet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPetRequest'
        required: true
      responses:
        "200":
          description: petstore.v3.PetService.AddPet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddPetResponse'
  /pet/{petId}:
    get:
      operationId: findPet
      parameters:
        - name: petId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: petstore.v3.PetService.FindPet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindPetResponse'
    delete:
      operationId: deletePet
      parameters:
        - name: petId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: petstore.v3.PetService.DeletePet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePetResponse'
  /pet/findByStatus:
    get:
      operationId: findPetsByStatus
      parameters:
        - name: status
          in: query
          schema:
            type: string
      responses:
        "200":
          description: petstore.v3.PetService.FindPetsByStatus response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindPetsByStatusResponse'
  /pet/findByTags:
    get:
      operationId: findPetsByTags
      parameters:
        - name: tags
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: petstore.v3.PetService.FindPetsByTags response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindPetsByTagsResponse'
  /store/order:
    post:
      operationId: addStoreOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddStoreOrderRequest'
        required: true
      responses:
        "200":
          description: petstore.v3.StoreService.AddStoreOrder response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddStoreOrderResponse'
components:
  schemas:
    AddPetRequest:
      type: object
    AddPetResponse:
      type: object
      properties:
        pet:
          $ref: '#/components/schemas/Pet'
    AddStoreOrderRequest:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Order'
    AddStoreOrderResponse:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Order'
    DeletePetResponse:
      type: object
    FindPetResponse:
      type: object
      properties:
        pet:
          $ref: '#/components/schemas/Pet'
    FindPetsByStatusResponse:
      type: object
      properties:
        pets:
          type: array
          items:
            $ref: '#/components/schemas/Pet'
    FindPetsByTagsResponse:
      type: object
      properties:
        pets:
          type: array
          items:
            $ref: '#/components/schemas/Pet'
    Pet:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        category:
          $ref: '#/components/schemas/Category'
        photoUrls:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    UpdatePetRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        category:
          $ref: '#/components/schemas/Category'
        photoUrls:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
    UpdatePetResponse:
      type: object
      properties:
        pet:
          $ref: '#/components/schemas/Pet'
